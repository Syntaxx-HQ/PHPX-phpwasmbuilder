name: Build wasm binaries and publish them in the to the GitHub Releases section

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g. v1.0.0)'
        required: true
        type: string
        pattern: '^v[0-9]+\.[0-9]+\.[0-9]+$'
        default: 'v1.0.0'

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Read PHP_BRANCH from .env
        id: env
        run: |
          echo "PHP_BRANCH=$(grep PHP_BRANCH .env | cut -d '=' -f2)" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Debug PHP_BRANCH value
        run: |
          echo "PHP_BRANCH from env: ${{ steps.env.outputs.PHP_BRANCH }}"
          echo "PHP_BRANCH from .env file:"
          cat .env | grep PHP_BRANCH

      - name: Build standard wasm using Docker Buildx Bake
        uses: docker/bake-action@v4
        with:
          targets: standard
          files: |
            ./docker-bake.hcl
          set: |
            *.tags=ghcr.io/syntaxx-hq/phpx-phpwasmbuilder:standard-${{ github.ref_name || inputs.version }}
            *.cache-from=type=gha
            *.cache-to=type=gha,mode=max
            *.args.PHP_BRANCH=${{ steps.env.outputs.PHP_BRANCH }}

      - name: Build VRZNO wasm using Docker Buildx Bake
        uses: docker/bake-action@v4
        with:
          targets: vrzno
          files: |
            ./docker-bake.hcl
          set: |
            *.tags=ghcr.io/syntaxx-hq/phpx-phpwasmbuilder:vrzno-${{ github.ref_name || inputs.version }}
            *.cache-from=type=gha
            *.cache-to=type=gha,mode=max
            *.args.PHP_BRANCH=${{ steps.env.outputs.PHP_BRANCH }}

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name || inputs.version }}
          name: Release ${{ github.ref_name || inputs.version }}
          draft: false
          prerelease: false
          files: |
            build/*.wasm
            build/*.js
            build/*.mjs
            build/*.d.ts
